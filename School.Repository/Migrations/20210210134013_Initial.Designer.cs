// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using School.Repository.Context;

namespace School.Repository.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20210210134013_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("School.Repository.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<string>("Room")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Schedule")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Calculo 3",
                            ProfessorId = 2,
                            Schedule = new DateTime(2021, 2, 10, 10, 40, 12, 993, DateTimeKind.Local).AddTicks(7466)
                        });
                });

            modelBuilder.Entity("School.Repository.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IngressYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfessorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(2021, 2, 10, 10, 40, 12, 993, DateTimeKind.Local).AddTicks(5538),
                            IngressYear = new DateTime(2021, 2, 10, 10, 40, 12, 993, DateTimeKind.Local).AddTicks(5045),
                            ProfessorName = "Helena"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(2021, 2, 10, 10, 40, 12, 993, DateTimeKind.Local).AddTicks(5974),
                            IngressYear = new DateTime(2021, 2, 10, 10, 40, 12, 993, DateTimeKind.Local).AddTicks(5971),
                            ProfessorName = "Matilde"
                        });
                });

            modelBuilder.Entity("School.Repository.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IngressYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(2021, 2, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IngressYear = new DateTime(2021, 2, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            StudentName = "Mario Laiala"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(2021, 2, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IngressYear = new DateTime(2021, 2, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            StudentName = "Cirilo"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(2021, 2, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IngressYear = new DateTime(2021, 2, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            StudentName = "Maria Joaquina"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("School.Repository.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Repository.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("School.Repository.Models.Course", b =>
                {
                    b.HasOne("School.Repository.Models.Professor", "Professor")
                        .WithMany("Courses")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("School.Repository.Models.Professor", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
